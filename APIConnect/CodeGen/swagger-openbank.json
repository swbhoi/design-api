{
	"swagger": "2.0",
	"info": {
		"title": "Open Bank Project API",
		"description": "An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2016. Licensed under the AGPL and commercial licences.",
		"contact": {
			"name": "TESOBE Ltd. / Open Bank Project",
			"url": "https://openbankproject.com"
		},
		"version": "v2.1.0"
	},
	"host": "http://52.14.11.67:8080/OBP-API-1.0",
	"basePath": "/obp/v2.1.0",
	"schemes": ["http"],
	"paths": {
		"/accounts": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get all Accounts at all Banks.",
				"description": "<p>Get all accounts at all banks the User has access to (Authenticated + Anonymous access). Returns the list of accounts at that the user has access to at all banks. For each account the API returns the account ID and the available views.</p><p>If the user is not authenticated via OAuth, the list will contain only the accounts providing public views. If the user is authenticated, the list will contain non-public accounts to which the user has access, in addition to all public accounts.</p><p>Authentication is Optional</p>",
				"operationId": "2_1_0-allAccountsAllBanks",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/accounts/public": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Public Accounts at all Banks.",
				"description": "<p>Get public accounts at all banks (Anonymous access). Returns accounts that contain at least one public view (a view where is_public is true) For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>",
				"operationId": "2_1_0-publicAccountsAllBanks",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Account by Id (Full)",
				"description": "<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li>  <li>Available views (sorted by short_name)</li></ul><p>More details about the data moderation by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications. This call provides balance and other account information via delegated authenticaiton using OAuth.</p><p>OAuth authentication is required if the 'is_public' field in view (VIEW_ID) is not set to <code>true</code>.</p>",
				"operationId": "2_1_0-accountById",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Counterparties of one Account.",
				"description": "<p>Returns data about all the counterparties (other accounts) that have shared at least one transaction with the ACCOUNT_ID at BANK_ID. Authentication is Optional Authentication is required if the view VIEW_ID is not public.</p>",
				"operationId": "2_1_0-getCounterpartiesForBankAccount",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transaction Request Types for Account",
				"description": "<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request (as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul>  <li>the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li>  <li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li>  <li>the threshold of that challenge.</li></ul><p>For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>",
				"operationId": "2_1_0-getTransactionRequestTypes",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transaction Requests.",
				"description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul>  <li>Transaction Request Id</li>  <li>Type</li>  <li>Status (INITIATED, COMPLETED)</li>  <li>Challenge (in order to confirm the request)</li>  <li>From Bank / Account</li>  <li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li>  <li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer. This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after. The customer can proceed with the Transaction by answering the security challenge.</p>",
				"operationId": "2_1_0-getTransactionRequests",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transactions for Account (Full)",
				"description": "<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p><p>Possible custom headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default value: \"completed\" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value: 50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li>  <li>obp_from_date=DATE =&gt; default value: date of the oldest transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt; default value: date of the newest transaction registered (format below)</li></ul><p><strong>Date format parameter</strong>: \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" (2014-07-01T00:00:00.000Z) ==&gt; time zone is UTC.</p>",
				"operationId": "2_1_0-getTransactionsForBankAccount",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/other_account": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Counterparty of Transaction",
				"description": "<p>Get other account of a transaction. Returns details of the other party involved in the transaction, moderated by the <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p>",
				"operationId": "2_1_0-getCounterpartyForTransaction",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transaction by Id.",
				"description": "<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional Authentication is required if the view is not public.</p>",
				"operationId": "2_1_0-getTransactionByIdForBankAccount",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/accounts/public": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Accounts at Bank (Public)",
				"description": "<p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication via OAuth is not required.</p>",
				"operationId": "2_1_0-publicAccountsAtOneBank",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/products": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Bank Products",
				"description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p><ul>  <li>Name</li>  <li>Code</li>  <li>Category</li>  <li>Family</li>  <li>Super Family</li>  <li>More info URL</li>  <li>Description</li>  <li>Terms and Conditions</li>  <li>License the data under this endpoint is released under Authentication is Optional</li></ul>",
				"operationId": "2_1_0-getProducts",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/products/PRODUCT_CODE": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Bank Product",
				"description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID and PRODUCT_CODE including:</p><ul>  <li>Name</li>  <li>Code</li>  <li>Category</li>  <li>Family</li>  <li>Super Family</li>  <li>More info URL</li>  <li>Description</li>  <li>Terms and Conditions</li>  <li>License the data under this endpoint is released under Authentication is Optional</li></ul>",
				"operationId": "2_1_0-getProduct",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/banks/BANK_ID/transaction-types": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transaction Types offered by the bank",
				"description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul>  <li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li>  <li>bank_id : The bank that supports this TransactionType</li>  <li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li>  <li>summary : A succinct summary</li>  <li>description : A longer description</li>  <li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>",
				"operationId": "2_1_0-getTransactionTypes",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/cards": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get cards for the current user",
				"description": "<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p>",
				"operationId": "2_1_0-getCards",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/my/banks/BANK_ID/accounts/ACCOUNT_ID/account": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Account by Id (Core)",
				"description": "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li></ul><p>This call returns the owner view and requires access to that view.</p><p>OAuth authentication is required</p>",
				"operationId": "2_1_0-getCoreAccountById",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get Transactions for Account (Core)",
				"description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is required.</p><p>Possible custom headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default value: \"completed\" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value: 50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li>  <li>obp_from_date=DATE =&gt; default value: date of the oldest transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt; default value: date of the newest transaction registered (format below)</li></ul><p><strong>Date format parameter</strong>: \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" (2014-07-01T00:00:00.000Z) ==&gt; time zone is UTC.</p>",
				"operationId": "2_1_0-getCoreTransactionsForBankAccount",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		},
		"/users/current/customers": {
			"get": {
				"tags": ["2_1_0"],
				"summary": "Get all customers for logged in user",
				"description": "<p>Information about the currently authenticated user.</p><p>Authentication via OAuth is required.</p>",
				"operationId": "2_1_0-getCustomers",
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Error",
						"schema": {
							"$ref": "#/definitions/Error"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Error": {
			"type": "object",
			"required": ["code", "message"],
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32"
				},
				"message": {
					"type": "string"
				}
			}
		}
	}
}